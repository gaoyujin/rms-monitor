import { Random } from "mockjs";
import { MockMethod } from "vite-plugin-mock";
import {
  checkPointList,
  preActionListType,
  ruleInfo
} from "/@/models/checkPoint";

const checkPointListType: checkPointList[] = [];
const ruleType: ruleInfo[] = [];

const itemList = () => {
  const result = {
    errorCode: "",
    errorCodeDes: "",
    resultCode: "SUCCESS",
    series: checkPointListType
  };

  result.series = [];
  const itemAction: preActionListType[] = [];
  for (let index = 0; index < 3; index++) {
    const item = {
      preAction: Random.word(6),
      prefix: Random.word(6),
      targetFields: Random.word(6)
    };

    itemAction.push(item);
  }

  for (let index = 0; index < 4; index++) {
    const itemInfo = {
      businessNo: Random.word(6),
      businessTypeList: null,
      checkDuplicate: true,
      code: Random.word(6),
      defaultPkFieldName: Random.word(6),
      label: Random.cword(8),
      memo: Random.csentence(50),
      preActionList: itemAction,
      syncInstance: Random.word(6),
      globalRule: {
        ruleAgenda: Random.word(6),
        status: "Online"
      },
      preExecuteRule: {
        ruleAgenda: Random.word(6),
        status: "Offline"
      },
      routeRule: {
        ruleAgenda: "",
        status: ""
      }
    };

    result.series.push(itemInfo);
  }

  return result;
};

const allRuleList = () => {
  const result = {
    errorCode: "",
    errorCodeDes: "",
    resultCode: "SUCCESS",
    series: ruleType
  };

  result.series = [];
  const itemAction: ruleInfo[] = [];
  for (let index = 0; index < 12; index++) {
    const item = {
      ruleDescription: Random.cword(18),
      ruleNo: Random.word(6)
    };

    itemAction.push(item);
  }

  result.series = itemAction;
  return result;
};

const ruleItemResult = () => {
  const result = {
    errorCode: "",
    errorCodeDes: "",
    resultCode: "SUCCESS",
    item: {
      code: Random.word(8),
      ruleAgenda: Random.word(8),
      ruleContent: "import java.util.Map;",
      ruleHistoryDetails: [
        {
          ruleAgenda: Random.word(8),
          ruleContent:
            'package CP001;\r\n\r\nimport java.util.Map;\r\nimport java.util.HashMap;\r\nimport java.util.Date;\r\nimport com.shengpay.rms.param.ParamUtil;\r\nimport com.shengpay.rms.util.DateUtils;\r\nimport com.google.common.base.Strings;\r\nimport org.apache.commons.collections.MapUtils;\r\nimport org.apache.commons.lang.StringUtils;\r\nimport com.google.common.collect.Maps;\r\nimport com.shengpay.rms.securityFlow.model.SecurityFlowResultVO;\r\nimport com.shengpay.rms.decisionTable.model.DecisionTableResultVO;\r\nimport com.shengpay.rms.decisionTable.service.DecisionTableService;\r\nimport java.util.Iterator;\r\nimport java.util.Set;\r\n\r\nglobal com.shengpay.rms.rules.service.ResourceService resource;\r\nglobal org.apache.commons.logging.Log logger;\r\n\r\n\r\nrule "PreExecution"\r\nwhen\r\n\t$event:Map()\r\nthen\r\n\ttry {\r\n\t\tString customerNo = $event.get("customerNo") == null ? "" : $event.get("customerNo").toString();\r\n\t\tString payerPtId = $event.get("payerPtId") == null ? "" : $event.get("payerPtId").toString();\r\n\t\tString payerPt = $event.get("payerPt") == null ? "" : $event.get("payerPt").toString();\r\n\r\n\t\tString payChannel = $event.get("payChannel") == null ? "" : $event.get("payChannel").toString();\r\n\t\tString bankCardNo = $event.get("bankCardNo") == null ? "" : $event.get("bankCardNo").toString();\r\n\t\tString externalInvokeIP = $event.get("externalInvokeIP") == null ? "" : $event.get("externalInvokeIP").toString();\r\n\t\tString clientIp = $event.get("clientIp") == null ? "" : $event.get("clientIp").toString();\r\n\t\tString sdpMerOverseaType = $event.get("sdpMerOverseaType") == null ? "" : $event.get("sdpMerOverseaType").toString();\r\n\t\tString pan = $event.get("pan") == null ? "" : $event.get("pan").toString();\r\n\t\tString subMrchantNo = $event.get("subMrchantNo")==null?"":$event.get("subMrchantNo").toString();\r\n\t\t$event.put("MERCHANT_TYPES", "ONLINE");\r\n\t\tif(!"".equals(subMrchantNo)){\r\n\t\t    Map<String, String> map = Maps.newHashMap();\r\n\t\t \tmap.put("subMrchantNo", subMrchantNo);\r\n\t\t \tmap.put("merchantNo", customerNo);\r\n\t\t \tresource.securityFlowService.push("B132", map);\r\n\t\t}\r\n\t\t//身份证末尾x大小写处理\r\n\t\tString cardholderIdentNumber = $event.get("cardholderIdentNumber") == null ? "" : $event.get("cardholderIdentNumber").toString();\r\n\t\tif(cardholderIdentNumber.indexOf("X")>0){\r\n\t\t\tcardholderIdentNumber = cardholderIdentNumber.replace("X", "x");\r\n\t\t\t$event.put("cardholderIdentNumber", cardholderIdentNumber);\r\n\t\t}\r\n\t\t//判断是否外汇商户\r\n\t\tif(!"".equals(sdpMerOverseaType)  && "001".equals(sdpMerOverseaType)){\r\n\t\t\t$event.put("wbCustomer", "1");\r\n\t\t}else{\r\n\t\t\t$event.put("wbCustomer", "0");\r\n\t\t}\r\n\r\n\t\tif(!"".equals(payChannel) && ParamUtil.StringIn(payChannel, "35,36", false)){\r\n\t\t\t$event.remove("cardType");\r\n\t\t}\r\n\t\t\r\n\t\tif("".equals(externalInvokeIP)&&!"".equals(clientIp)){\r\n\t\t   $event.put("externalInvokeIP",clientIp); \r\n\t\t}\r\n\r\n\t\tif("43".equals(payChannel)){\r\n\t\t\t$event.put("payerCardType", "0201");\r\n\t\t}\r\n\r\n\t\tif(!"".equals(pan) && "".equals(bankCardNo)){\r\n\t\t\t$event.put("bankCardNo", pan);\r\n\t\t}\r\n\r\n\t\tString CARD_INFO = $event.get("CARD_INFO") == null ? "" : $event.get("CARD_INFO").toString();\r\n\t\tif(!"".equals(CARD_INFO)){\r\n\t\t    if(CARD_INFO.lastIndexOf("_")>=0){\r\n\t\t\t    CARD_INFO = StringUtils.substring(CARD_INFO, 0, CARD_INFO.lastIndexOf("_"));\r\n\t\t    }\r\n\t\t\t$event.put("CARD_INFO", CARD_INFO);\r\n\t\t}\r\n\r\n\t\tif("495887".equals(customerNo) && !"".equals(payerPtId)){\r\n\t\t\tMap<String, String> ptInfo = new HashMap<String, String>();\r\n\t\t\tresource.cachedUserInfoService.saveMerchantUserInfo(customerNo, payerPtId, ptInfo);\r\n\t\t}\r\n\r\n\t\tif("".equals(payerPt) && !"".equals(payerPtId)){\r\n\t\t\t$event.put("payerPt", payerPtId);\r\n\t\t}\r\n\t} catch (Exception ex) {\r\n\t\tlogger.error("exec CP001-PreExecution error.", ex);\r\n\t}\r\nend\r\n\r\nrule "PreExecution-HPS"\r\nwhen\r\n\t$event:Map((this["payChannel"] == "43" || this["payChannel"] == "44" || this["payChannel"]=="d1"))\r\nthen\r\ntry{\r\n \t   String bwName = "HPS_payerMemberId_whiteList";\r\n\t   String bwName2 = "HPS_payerPhone_whiteList";\r\n\t   String bwName3 = "HPS_merchantNo_whiteList";\r\n\t   String payerMemberId = $event.get("payerMemberId") == null ? "" : $event.get("payerMemberId").toString();\r\n\t   String payerPt = $event.get("payerPt") == null ? "" : $event.get("payerPt").toString();\r\n\t   String payerPhone = $event.get("payerPhone") == null ? "" : $event.get("payerPhone").toString();\r\n\t   String customerNo = $event.get("customerNo") == null ? "" : $event.get("customerNo").toString();\r\n\t   String bankCardNoKey = $event.get("bankCardNoKey") == null ? "" : $event.get("bankCardNoKey").toString();\r\n\t   if(resource.bwList.in(bwName,payerMemberId)){\r\n\t   \t$event.put("HPS_payerMemberId_W_LIST", "1");\r\n\t   }else{\r\n\t   \t$event.put("HPS_payerMemberId_W_LIST", "0");\r\n\t   }\r\n\t   if(resource.bwList.in(bwName2,payerPhone)){\r\n\t   \t$event.put("HPS_payerPhone_W_LIST", "1");\r\n\t   }else{\r\n\t   \t$event.put("HPS_payerPhone_W_LIST", "0");\r\n\t   }\r\n\t   if(resource.bwList.in(bwName3,customerNo)){\r\n\t   \t$event.put("HPS_customerNo_W_LIST", "1");\r\n\t   }else{\r\n\t   \t$event.put("HPS_customerNo_W_LIST", "0");\r\n\t   }\r\n\t   Map<String,String> map = Maps.newHashMap();\r\n     map.put("memberId", payerMemberId);\r\n     DecisionTableResultVO decisionTableResult  =resource.decisionTableService.queryData("D103006", map);\r\n     if(decisionTableResult.getData() != null){\r\n        $event.put("HPS_memberId_by_rule", decisionTableResult.getData().toString()); \r\n     }\r\n     map = Maps.newHashMap();\r\n     map.put("customerNo", customerNo);\r\n     decisionTableResult  =resource.decisionTableService.queryData("D103007", map);\r\n     if(decisionTableResult.getData() != null){\r\n        $event.put("HPS_customerNo_by_rule", decisionTableResult.getData().toString()); \r\n     }\r\n     map = Maps.newHashMap();\r\n     map.put("bankCardNoKey", bankCardNoKey);\r\n     decisionTableResult  =resource.decisionTableService.queryData("D103008", map);\r\n     if(decisionTableResult.getData() != null){\r\n        $event.put("HPS_bankCardNoKey_by_rule", decisionTableResult.getData().toString()); \r\n     }\r\n     \r\n     \r\n   }catch (Exception ex) {\r\n     logger.error("exec PreExecution-HPS error.", ex);\r\n   }\r\n\r\nend\r\n\r\nrule "PreExecution-HPS-API"\r\nwhen\r\n\t$event:Map((this["payChannel"] == "43" || this["payChannel"] == "44") &&this["isNewMasExpressApi"] == "Y")\r\nthen\r\ntry{\r\n \t   \r\n\t   String payerPt = $event.get("payerPt") == null ? "" : $event.get("payerPt").toString();\r\n\t   String payerPhone = $event.get("payerPhone") == null ? "" : $event.get("payerPhone").toString();\r\n\t   String customerNo = $event.get("customerNo") == null ? "" : $event.get("customerNo").toString();\r\n\t   String bankCardNoKey = $event.get("bankCardNoKey") == null ? "" : $event.get("bankCardNoKey").toString();\r\n\t   \r\n     \r\n    \r\n         Map map = Maps.newHashMap();\r\n         map.put("bankCardNoKey", bankCardNoKey);\r\n         DecisionTableResultVO decisionTableResult  =resource.decisionTableService.queryData("D103011", map);\r\n         if(decisionTableResult.getData() != null){\r\n            $event.put("HPS_API_bankCardNoKey_by_rule", decisionTableResult.getData().toString()); \r\n         }\r\n         map = Maps.newHashMap();\r\n         map.put("customerNo", customerNo);\r\n         decisionTableResult  =resource.decisionTableService.queryData("D103012", map);\r\n         if(decisionTableResult.getData() != null){\r\n            $event.put("HPS_API_customerNo_by_rule", decisionTableResult.getData().toString()); \r\n         }\r\n         map = Maps.newHashMap();\r\n         map.put("payerPt", payerPt);\r\n         decisionTableResult  =resource.decisionTableService.queryData("D103013", map);\r\n         if(decisionTableResult.getData() != null){\r\n            $event.put("HPS_API_payerPt_by_rule", decisionTableResult.getData().toString()); \r\n         }\r\n         map = Maps.newHashMap();\r\n         map.put("payerPhone", payerPhone);\r\n         decisionTableResult  =resource.decisionTableService.queryData("D103014", map);\r\n         if(decisionTableResult.getData() != null){\r\n            $event.put("HPS_API_payerPhone_by_rule", decisionTableResult.getData().toString()); \r\n         }\r\n     \r\n     \r\n   }catch (Exception ex) {\r\n     logger.error("exec PreExecution-HPS error.", ex);\r\n   }\r\n\r\nend\r\n\r\nrule "PreExecution-Mall"\r\nwhen\r\n\t$event:Map()\r\nthen\r\n \t try {\r\n          String customerNo = $event.get("customerNo") == null ? "" : $event.get("customerNo").toString();\r\n          String payerPtId = $event.get("payerPtId") == null ? "" : $event.get("payerPtId").toString();\r\n          String blackCustomerNos = "100804,100805,100309,100962,100314,287371,301554,301555,301566,301568,301571,301582";\r\n          if (!"".equals(payerPtId) && !"".equals(customerNo) && ParamUtil.StringIn(customerNo, blackCustomerNos, false)) {\r\n              Map<String, String> result = resource.cachedUserInfoService.findSndaPtInfo(payerPtId);\r\n              if (result != null) {\r\n                  Set<String> setKey = result.keySet();\r\n                  if(setKey!= null ){\r\n                      Iterator<String> i = setKey.iterator();\r\n                      String tempKey = null;\r\n                      String temp = null;\r\n                      while(i.hasNext()){\r\n                          tempKey = i.next();\r\n                          temp = tempKey.substring(0, 1).toUpperCase()+tempKey.substring(1, tempKey.length());\r\n                          $event.put("payerPt"+ temp, result.get(tempKey));\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      } catch (Exception ex) {\r\n          logger.error("exec CP001-PreExecution-Mall error.", ex);\r\n      }\r\n\r\nend\r\n\r\n\r\n\r\n\r\nrule "PreExecution-390115"\r\nwhen\r\n\t$event:Map()\r\nthen\r\n\ttry {\r\n\t\tString orderExt = (String)$event.get("orderExt");\r\n\t\tif(orderExt != null){\r\n\t\t\tString[] arr = StringUtils.split(orderExt, "|");\r\n\r\n\t\t\tif (arr.length >= 3) {\r\n\t\t\t\t// 百联钓鱼的透传字段 orderExt:\r\n\t\t\t\t// 1  否|虚拟|网银转存\r\n\t\t\t\t// 2  否|虚拟|点卡\r\n\t\t\t\t// 3  否|虚拟|网银转存\r\n\t\t\t\t// 4  是|实物|百联E城购物\r\n\t\t\t\t// 5  否|虚拟|网银转存\r\n\t\t\t\t// 92 是|虚拟|公用事业费\r\n\t\t\t\t// 97 是|实物|百联E城购物\r\n\r\n\t\t\t\t// merchantUserStatus(新增字段) : 101(实名注册用户),201(非实名注册用户) ,901(非注册用户)\r\n\t\t\t\tif (arr[0].trim().equals("是")) {\r\n\t\t\t\t\t$event.put("merchantUserStatus", "101");\r\n\t\t\t\t} else if (arr[0].trim().equals("否")) {\r\n\t\t\t\t\t$event.put("merchantUserStatus", "201");\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$event.put("merchantUserStatus", "901");\r\n\t\t\t\t}\r\n\t\t\t\tlogger.info("merchantUserStatus: " + $event.get("merchantUserStatus"));\r\n\r\n\t\t\t\t// orderProductType(原有字段): 商品类型（1、实物 2、虚拟物品 3、实物+虚拟物品）\r\n\t\t\t\tif (arr[1].trim().equals("实物")) {\r\n\t\t\t\t\t$event.put("orderProductType", "1");\r\n\t\t\t\t} else if (arr[1].trim().equals("虚拟")) {\r\n\t\t\t\t\t$event.put("orderProductType", "2");\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$event.put("orderProductType", "3");\r\n\t\t\t\t}\r\n\t\t\t\tlogger.info("orderProductType: " + $event.get("orderProductType"));\r\n\r\n\t\t\t\t// orderProductInfo(原有字段): 商品信息（商品的名字等）  \r\n\t\t\t\t$event.put("orderProductInfo", arr[2]);\r\n\t\t\t\tlogger.info("orderProductInfo: " + $event.get("orderProductInfo"));\r\n\t\t\t} else {\r\n\t\t\t\tlogger.info("orderExt is not valid: " + orderExt);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t} catch (Exception ex) {\r\n\t\tlogger.error("exec CP001-PreExecution-390115 error.", ex);\r\n\t}\r\nend\r\n\r\n\r\nrule "PostExecution"\r\nwhen\r\n\t$event:Map()\r\nthen\r\n\r\nend\r\n\r\nrule "PostExecution-payChannel-all-pay-flow"\r\nwhen\r\n\t$event:Map()\r\nthen\r\n\t\ttry{\r\n\t\t    String payerMemberId = $event.get("payerMemberId") == null ? "" : $event.get("payerMemberId").toString();\r\n\t\t \tString masOrderNo = $event.get("masOrderNo") == null ? "" : $event.get("masOrderNo").toString();\r\n\t\t \tString customerNo = $event.get("customerNo") == null ? "" : $event.get("customerNo").toString();\r\n\t\t \tString payerCertNo = $event.get("payerCertNo") == null ? "" : $event.get("payerCertNo").toString();\r\n            String payerPhone = $event.get("payerPhone") == null ? "" : $event.get("payerPhone").toString();\r\n            String payChannel = $event.get("payChannel") == null ? "" : $event.get("payChannel").toString();\r\n            String bankCardNoKey = $event.get("bankCardNoKey") == null ? "" : $event.get("bankCardNoKey").toString();\r\n            String productCode = $event.get("productCode") == null ? "" : $event.get("productCode").toString();\r\n            String payIpProvince = $event.get("payIpProvince") == null ? "" : $event.get("payIpProvince").toString();\r\n            String payIpCity = $event.get("payIpCity") == null ? "" : $event.get("payIpCity").toString();\r\n            Double amount = $event.get("payableAmount") == null ? 0.0 : Double.parseDouble($event.get("payableAmount").toString());\r\n            String orderReferURL = $event.get("orderReferURL") == null ? "" : $event.get("orderReferURL").toString();\r\n            String payIP = $event.get("payIP")==null?"":$event.get("payIP").toString();\r\n            String payerPt = $event.get("payerPt") == null ? "" : $event.get("payerPt").toString();\r\n\t\t \tString sfsName = "B112";\r\n\t\t \tString sfsName2 = "P112002";\r\n\t\t \t\r\n\t\t \tMap<String, String> params = Maps.newHashMap();\r\n\t\t \tparams.put("payableAmount", new Double(amount).toString());\r\n\t\t \tparams.put("amount", amount+"");\r\n\t\t \tparams.put("payIP", payIP);\r\n\t\t \tparams.put("payerPt", payerPt);\r\n\t \t  if (!"".equals(productCode)) {\r\n\t      params.put("productCode", productCode);\r\n\t\t  }\r\n\t\t  if (!"".equals(masOrderNo)) {\r\n\t\t      params.put("masOrderNo", masOrderNo);\r\n\t\t  }\r\n\t    if (!"".equals(payerCertNo)) {\r\n          params.put("payerCertNo", payerCertNo);\r\n      }\r\n      if (!"".equals(payerPhone)) {\r\n          params.put("payerPhone", payerPhone);\r\n      }\r\n      if (!"".equals(payChannel)) {\r\n          params.put("payChannel", payChannel);\r\n         \r\n      }\r\n      if (!"".equals(customerNo)) {\r\n          params.put("customerNo", customerNo);\r\n         \r\n      }\r\n      if (!"".equals(bankCardNoKey)) {\r\n          params.put("bankCardNoKey", bankCardNoKey);\r\n         \r\n      }\r\n      if (!"".equals(payerMemberId)) {\r\n          params.put("payerMemberId", payerMemberId);\r\n      }\r\n      if (!"".equals(payIpProvince)) {\r\n          params.put("payIpProvince", payIpProvince);\r\n      }\r\n      if (!"".equals(payIpCity)) {\r\n          params.put("payIpCity", payIpCity);\r\n      }\r\n      if (!"".equals(orderReferURL)) {\r\n          params.put("orderReferURL", orderReferURL);\r\n      }\r\n      \r\n\t\t  boolean b  = resource.securityFlowService.push(sfsName, params);\r\n\t\t  params.put("bankCardNoKey_S", bankCardNoKey);\r\n\t\t  params.put("payerPhone_S", payerPhone);\r\n\t\t  SecurityFlowResultVO result = resource.securityFlowService.execute(sfsName2, params);\r\n\t\t}catch(Exception ex){\r\n\t\t\tlogger.error("exec PostExecution-payChannel-all-pay-flow error.", ex);\r\n\t\t}\r\n\r\nend\r\n\r\nrule "PostExecution-Wallet-flow"\r\nwhen\r\n\t$event:Map(this["customerNo"] == "114228")\r\nthen\r\n\t\t try {\r\n            //用于钱包在cp001上的推送\r\n            String customerNo = $event.get("customerNo") == null ? "" : $event.get("customerNo").toString();\r\n            String invokeIp = $event.get("externalInvokeIP") == null ? "" : $event.get("externalInvokeIP").toString();\r\n            String pt = $event.get("payerPt") == null ? "" : $event.get("payerPt").toString().toLowerCase();\r\n            String masOrderNo = $event.get("masOrderNo") == null ? "" : $event.get("masOrderNo").toString();\r\n            Double amount = $event.get("payableAmount") == null ? 0.0 : Double.parseDouble($event.get("payableAmount").toString());\r\n\r\n            String sfsName = "B111";\r\n            Map<String, String> params = Maps.newHashMap();\r\n            if (!"".equals(masOrderNo)) {\r\n                params.put("masOrderNo", masOrderNo);\r\n            }\r\n            if (!"".equals(customerNo)) {\r\n                params.put("customerNo", customerNo);\r\n            }\r\n            if (!"".equals(invokeIp)) {\r\n                params.put("invokeIp", invokeIp);\r\n            }\r\n            if (!"".equals(pt)) {\r\n                params.put("payerPt", pt);\r\n            }\r\n            params.put("payableAmount", new Double(amount).toString());\r\n            boolean b = resource.securityFlowService.push(sfsName, params);\r\n        } catch (Exception ex) {\r\n            logger.error("exec CP001-PostExecution-Wallet error.", ex);\r\n        }\r\n\r\nend\r\nrule "PostExecution-paymentCode-Wallet-flow"\r\nwhen\r\n\t$event:Map(this["paymentCode"] == "2001")\r\nthen\r\n\t\t try {\r\n            String payerMemberId = $event.get("payerMemberId") == null ? "" : $event.get("payerMemberId").toString();\r\n            String payerId = $event.get("payerId") == null ? "" : $event.get("payerId").toString();\r\n            String outMemberId = $event.get("outMemberId") == null ? "" : $event.get("outMemberId").toString();\r\n            String payeeMemberId = $event.get("payeeMemberId") == null ? "" : $event.get("payeeMemberId").toString();\r\n            Double amount = $event.get("payableAmount") == null ? 0.0 : Double.parseDouble($event.get("payableAmount").toString());\r\n            String fexPayerIdNo = $event.get("fexPayerIdNo") == null ? "" : $event.get("fexPayerIdNo").toString().toUpperCase();\r\n            String cardholderIdentNumber = $event.get("cardholderIdentNumber") == null ? "" : $event.get("cardholderIdentNumber").toString().toUpperCase();\r\n            String sfsName = "B122";\r\n    \t \tMap<String, String> params = Maps.newHashMap();\r\n    \t \tif(!"".equals(outMemberId)){\r\n    \t \t    params.put("payerMemberId", outMemberId);\r\n    \t \t}\r\n    \t \tif(!"".equals(payerId)){\r\n    \t \t    params.put("payerMemberId", payerId);\r\n    \t \t}\r\n    \t \tif(!"".equals(payerMemberId)){\r\n    \t \t    params.put("payerMemberId", payerMemberId);\r\n    \t \t}\r\n    \t \tparams.put("payeeMemberId", payeeMemberId);\r\n    \t \tif(!"".equals(cardholderIdentNumber)){\r\n    \t \t    params.put("payerCertNo", cardholderIdentNumber);\r\n    \t \t}\r\n    \t \tif(!"".equals(fexPayerIdNo)){\r\n    \t \t    params.put("payerCertNo", fexPayerIdNo);\r\n    \t \t}\r\n    \t \tparams.put("transferAmount", new Double(amount).toString());\r\n\t\tboolean b  = resource.securityFlowService.push(sfsName, params);\r\n        } catch (Exception ex) {\r\n            logger.error("exec CP001-PostExecution-Wallet error.", ex);\r\n        }\r\n\r\nend',
          opDateTime: Random.datetime(),
          opUserUid: Random.word(8),
          opUserName: "我是小A"
        },
        {
          ruleAgenda: Random.word(8),
          ruleContent:
            'package CP001;\r\n\r\nimport java.util.Map;\r\nimport java.util.HashMap;\r\nimport java.util.Date;\r\nimport com.shengpay.rms.param.ParamUtil;\r\nimport com.shengpay.rms.util.DateUtils;\r\nimport com.google.common.base.Strings;\r\nimport org.apache.commons.collections.MapUtils;\r\nimport org.apache.commons.lang.StringUtils;\r\nimport com.google.common.collect.Maps;\r\nimport com.shengpay.rms.securityFlow.model.SecurityFlowResultVO;\r\nimport com.shengpay.rms.decisionTable.model.DecisionTableResultVO;\r\nimport com.shengpay.rms.decisionTable.service.DecisionTableService;\r\nimport java.util.Iterator;\r\nimport java.util.Set;\r\n\r\nglobal com.shengpay.rms.rules.service.ResourceService resource;\r\nglobal org.apache.commons.logging.Log logger;\r\n\r\n\r\nrule "PreExecution"\r\nwhen\r\n\t$event:Map()\r\nthen\r\n\ttry {\r\n\t\tString customerNo = $event.get("customerNo") == null ? "" : $event.get("customerNo").toString();\r\n\t\tString payerPtId = $event.get("payerPtId") == null ? "" : $event.get("payerPtId").toString();\r\n\t\tString payerPt = $event.get("payerPt") == null ? "" : $event.get("payerPt").toString();\r\n\r\n\t\tString payChannel = $event.get("payChannel") == null ? "" : $event.get("payChannel").toString();\r\n\t\tString bankCardNo = $event.get("bankCardNo") == null ? "" : $event.get("bankCardNo").toString();\r\n\t\tString externalInvokeIP = $event.get("externalInvokeIP") == null ? "" : $event.get("externalInvokeIP").toString();\r\n\t\tString clientIp = $event.get("clientIp") == null ? "" : $event.get("clientIp").toString();\r\n\t\tString sdpMerOverseaType = $event.get("sdpMerOverseaType") == null ? "" : $event.get("sdpMerOverseaType").toString();\r\n\t\tString pan = $event.get("pan") == null ? "" : $event.get("pan").toString();\r\n\t\tString subMrchantNo = $event.get("subMrchantNo")==null?"":$event.get("subMrchantNo").toString();\r\n\t\t$event.put("MERCHANT_TYPES", "ONLINE");\r\n\t\tif(!"".equals(subMrchantNo)){\r\n\t\t    Map<String, String> map = Maps.newHashMap();\r\n\t\t \tmap.put("subMrchantNo", subMrchantNo);\r\n\t\t \tmap.put("merchantNo", customerNo);\r\n\t\t \tresource.securityFlowService.push("B132", map);\r\n\t\t}\r\n\t\t//身份证末尾x大小写处理\r\n\t\tString cardholderIdentNumber = $event.get("cardholderIdentNumber") == null ? "" : $event.get("cardholderIdentNumber").toString();\r\n\t\tif(cardholderIdentNumber.indexOf("X")>0){\r\n\t\t\tcardholderIdentNumber = cardholderIdentNumber.replace("X", "x");\r\n\t\t\t$event.put("cardholderIdentNumber", cardholderIdentNumber);\r\n\t\t}\r\n\t\t//判断是否外汇商户\r\n\t\tif(!"".equals(sdpMerOverseaType)  && "001".equals(sdpMerOverseaType)){\r\n\t\t\t$event.put("wbCustomer", "1");\r\n\t\t}else{\r\n\t\t\t$event.put("wbCustomer", "0");\r\n\t\t}\r\n\r\n\t\tif(!"".equals(payChannel) && ParamUtil.StringIn(payChannel, "35,36", false)){\r\n\t\t\t$event.remove("cardType");\r\n\t\t}\r\n\t\t\r\n\t\tif("".equals(externalInvokeIP)&&!"".equals(clientIp)){\r\n\t\t   $event.put("externalInvokeIP",clientIp); \r\n\t\t}\r\n\r\n\t\tif("43".equals(payChannel)){\r\n\t\t\t$event.put("payerCardType", "0201");\r\n\t\t}\r\n\r\n\t\tif(!"".equals(pan) && "".equals(bankCardNo)){\r\n\t\t\t$event.put("bankCardNo", pan);\r\n\t\t}\r\n\r\n\t\tString CARD_INFO = $event.get("CARD_INFO") == null ? "" : $event.get("CARD_INFO").toString();\r\n\t\tif(!"".equals(CARD_INFO)){\r\n\t\t    if(CARD_INFO.lastIndexOf("_")>=0){\r\n\t\t\t    CARD_INFO = StringUtils.substring(CARD_INFO, 0, CARD_INFO.lastIndexOf("_"));\r\n\t\t    }\r\n\t\t\t$event.put("CARD_INFO", CARD_INFO);\r\n\t\t}\r\n\r\n\t\tif("495887".equals(customerNo) && !"".equals(payerPtId)){\r\n\t\t\tMap<String, String> ptInfo = new HashMap<String, String>();\r\n\t\t\tresource.cachedUserInfoService.saveMerchantUserInfo(customerNo, payerPtId, ptInfo);\r\n\t\t}\r\n\r\n\t\tif("".equals(payerPt) && !"".equals(payerPtId)){\r\n\t\t\t$event.put("payerPt", payerPtId);\r\n\t\t}\r\n\t} catch (Exception ex) {\r\n\t\tlogger.error("exec CP001-PreExecution error.", ex);\r\n\t}\r\nend\r\n\r\nrule "PreExecution-HPS"\r\nwhen\r\n\t$event:Map((this["payChannel"] == "43" || this["payChannel"] == "44" || this["payChannel"]=="d1"))\r\nthen\r\ntry{\r\n \t   String bwName = "HPS_payerMemberId_whiteList";\r\n\t   String bwName2 = "HPS_payerPhone_whiteList";\r\n\t   String bwName3 = "HPS_merchantNo_whiteList";\r\n\t   String payerMemberId = $event.get("payerMemberId") == null ? "" : $event.get("payerMemberId").toString();\r\n\t   String payerPt = $event.get("payerPt") == null ? "" : $event.get("payerPt").toString();\r\n\t   String payerPhone = $event.get("payerPhone") == null ? "" : $event.get("payerPhone").toString();\r\n\t   String customerNo = $event.get("customerNo") == null ? "" : $event.get("customerNo").toString();\r\n\t   String bankCardNoKey = $event.get("bankCardNoKey") == null ? "" : $event.get("bankCardNoKey").toString();\r\n\t   if(resource.bwList.in(bwName,payerMemberId)){\r\n\t   \t$event.put("HPS_payerMemberId_W_LIST", "1");\r\n\t   }else{\r\n\t   \t$event.put("HPS_payerMemberId_W_LIST", "0");\r\n\t   }\r\n\t   if(resource.bwList.in(bwName2,payerPhone)){\r\n\t   \t$event.put("HPS_payerPhone_W_LIST", "1");\r\n\t   }else{\r\n\t   \t$event.put("HPS_payerPhone_W_LIST", "0");\r\n\t   }\r\n\t   if(resource.bwList.in(bwName3,customerNo)){\r\n\t   \t$event.put("HPS_customerNo_W_LIST", "1");\r\n\t   }else{\r\n\t   \t$event.put("HPS_customerNo_W_LIST", "0");\r\n\t   }\r\n\t   Map<String,String> map = Maps.newHashMap();\r\n     map.put("memberId", payerMemberId);\r\n     DecisionTableResultVO decisionTableResult  =resource.decisionTableService.queryData("D103006", map);\r\n     if(decisionTableResult.getData() != null){\r\n        $event.put("HPS_memberId_by_rule", decisionTableResult.getData().toString()); \r\n     }\r\n     map = Maps.newHashMap();\r\n     map.put("customerNo", customerNo);\r\n     decisionTableResult  =resource.decisionTableService.queryData("D103007", map);\r\n     if(decisionTableResult.getData() != null){\r\n        $event.put("HPS_customerNo_by_rule", decisionTableResult.getData().toString()); \r\n     }\r\n     map = Maps.newHashMap();\r\n     map.put("bankCardNoKey", bankCardNoKey);\r\n     decisionTableResult  =resource.decisionTableService.queryData("D103008", map);\r\n     if(decisionTableResult.getData() != null){\r\n        $event.put("HPS_bankCardNoKey_by_rule", decisionTableResult.getData().toString()); \r\n     }\r\n     \r\n     \r\n   }catch (Exception ex) {\r\n     logger.error("exec PreExecution-HPS error.", ex);\r\n   }\r\n\r\nend\r\n\r\nrule "PreExecution-HPS-API"\r\nwhen\r\n\t$event:Map((this["payChannel"] == "43" || this["payChannel"] == "44") &&this["isNewMasExpressApi"] == "Y")\r\nthen\r\ntry{\r\n \t   \r\n\t   String payerPt = $event.get("payerPt") == null ? "" : $event.get("payerPt").toString();\r\n\t   String payerPhone = $event.get("payerPhone") == null ? "" : $event.get("payerPhone").toString();\r\n\t   String customerNo = $event.get("customerNo") == null ? "" : $event.get("customerNo").toString();\r\n\t   String bankCardNoKey = $event.get("bankCardNoKey") == null ? "" : $event.get("bankCardNoKey").toString();\r\n\t   \r\n     \r\n    \r\n         Map map = Maps.newHashMap();\r\n         map.put("bankCardNoKey", bankCardNoKey);\r\n         DecisionTableResultVO decisionTableResult  =resource.decisionTableService.queryData("D103011", map);\r\n         if(decisionTableResult.getData() != null){\r\n            $event.put("HPS_API_bankCardNoKey_by_rule", decisionTableResult.getData().toString()); \r\n         }\r\n         map = Maps.newHashMap();\r\n         map.put("customerNo", customerNo);\r\n         decisionTableResult  =resource.decisionTableService.queryData("D103012", map);\r\n         if(decisionTableResult.getData() != null){\r\n            $event.put("HPS_API_customerNo_by_rule", decisionTableResult.getData().toString()); \r\n         }\r\n         map = Maps.newHashMap();\r\n         map.put("payerPt", payerPt);\r\n         decisionTableResult  =resource.decisionTableService.queryData("D103013", map);\r\n         if(decisionTableResult.getData() != null){\r\n            $event.put("HPS_API_payerPt_by_rule", decisionTableResult.getData().toString()); \r\n         }\r\n         map = Maps.newHashMap();\r\n         map.put("payerPhone", payerPhone);\r\n         decisionTableResult  =resource.decisionTableService.queryData("D103014", map);\r\n         if(decisionTableResult.getData() != null){\r\n            $event.put("HPS_API_payerPhone_by_rule", decisionTableResult.getData().toString()); \r\n         }\r\n     \r\n     \r\n   }catch (Exception ex) {\r\n     logger.error("exec PreExecution-HPS error.", ex);\r\n   }\r\n\r\nend\r\n\r\nrule "PreExecution-Mall"\r\nwhen\r\n\t$event:Map()\r\nthen\r\n \t try {\r\n          String customerNo = $event.get("customerNo") == null ? "" : $event.get("customerNo").toString();\r\n          String payerPtId = $event.get("payerPtId") == null ? "" : $event.get("payerPtId").toString();\r\n          String blackCustomerNos = "100804,100805,100309,100962,100314,287371,301554,301555,301566,301568,301571,301582";\r\n          if (!"".equals(payerPtId) && !"".equals(customerNo) && ParamUtil.StringIn(customerNo, blackCustomerNos, false)) {\r\n              Map<String, String> result = resource.cachedUserInfoService.findSndaPtInfo(payerPtId);\r\n              if (result != null) {\r\n                  Set<String> setKey = result.keySet();\r\n                  if(setKey!= null ){\r\n                      Iterator<String> i = setKey.iterator();\r\n                      String tempKey = null;\r\n                      String temp = null;\r\n                      while(i.hasNext()){\r\n                          tempKey = i.next();\r\n                          temp = tempKey.substring(0, 1).toUpperCase()+tempKey.substring(1, tempKey.length());\r\n                          $event.put("payerPt"+ temp, result.get(tempKey));\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      } catch (Exception ex) {\r\n          logger.error("exec CP001-PreExecution-Mall error.", ex);\r\n      }\r\n\r\nend\r\n\r\n\r\n\r\n\r\nrule "PreExecution-390115"\r\nwhen\r\n\t$event:Map()\r\nthen\r\n\ttry {\r\n\t\tString orderExt = (String)$event.get("orderExt");\r\n\t\tif(orderExt != null){\r\n\t\t\tString[] arr = StringUtils.split(orderExt, "|");\r\n\r\n\t\t\tif (arr.length >= 3) {\r\n\t\t\t\t// 百联钓鱼的透传字段 orderExt:\r\n\t\t\t\t// 1  否|虚拟|网银转存\r\n\t\t\t\t// 2  否|虚拟|点卡\r\n\t\t\t\t// 3  否|虚拟|网银转存\r\n\t\t\t\t// 4  是|实物|百联E城购物\r\n\t\t\t\t// 5  否|虚拟|网银转存\r\n\t\t\t\t// 92 是|虚拟|公用事业费\r\n\t\t\t\t// 97 是|实物|百联E城购物\r\n\r\n\t\t\t\t// merchantUserStatus(新增字段) : 101(实名注册用户),201(非实名注册用户) ,901(非注册用户)\r\n\t\t\t\tif (arr[0].trim().equals("是")) {\r\n\t\t\t\t\t$event.put("merchantUserStatus", "101");\r\n\t\t\t\t} else if (arr[0].trim().equals("否")) {\r\n\t\t\t\t\t$event.put("merchantUserStatus", "201");\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$event.put("merchantUserStatus", "901");\r\n\t\t\t\t}\r\n\t\t\t\tlogger.info("merchantUserStatus: " + $event.get("merchantUserStatus"));\r\n\r\n\t\t\t\t// orderProductType(原有字段): 商品类型（1、实物 2、虚拟物品 3、实物+虚拟物品）\r\n\t\t\t\tif (arr[1].trim().equals("实物")) {\r\n\t\t\t\t\t$event.put("orderProductType", "1");\r\n\t\t\t\t} else if (arr[1].trim().equals("虚拟")) {\r\n\t\t\t\t\t$event.put("orderProductType", "2");\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$event.put("orderProductType", "3");\r\n\t\t\t\t}\r\n\t\t\t\tlogger.info("orderProductType: " + $event.get("orderProductType"));\r\n\r\n\t\t\t\t// orderProductInfo(原有字段): 商品信息（商品的名字等）  \r\n\t\t\t\t$event.put("orderProductInfo", arr[2]);\r\n\t\t\t\tlogger.info("orderProductInfo: " + $event.get("orderProductInfo"));\r\n\t\t\t} else {\r\n\t\t\t\tlogger.info("orderExt is not valid: " + orderExt);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t} catch (Exception ex) {\r\n\t\tlogger.error("exec CP001-PreExecution-390115 error.", ex);\r\n\t}\r\nend\r\n\r\n\r\nrule "PostExecution"\r\nwhen\r\n\t$event:Map()\r\nthen\r\n\r\nend\r\n\r\nrule "PostExecution-payChannel-all-pay-flow"\r\nwhen\r\n\t$event:Map()\r\nthen\r\n\t\ttry{\r\n\t\t    String payerMemberId = $event.get("payerMemberId") == null ? "" : $event.get("payerMemberId").toString();\r\n\t\t \tString masOrderNo = $event.get("masOrderNo") == null ? "" : $event.get("masOrderNo").toString();\r\n\t\t \tString customerNo = $event.get("customerNo") == null ? "" : $event.get("customerNo").toString();\r\n\t\t \tString payerCertNo = $event.get("payerCertNo") == null ? "" : $event.get("payerCertNo").toString();\r\n            String payerPhone = $event.get("payerPhone") == null ? "" : $event.get("payerPhone").toString();\r\n            String payChannel = $event.get("payChannel") == null ? "" : $event.get("payChannel").toString();\r\n            String bankCardNoKey = $event.get("bankCardNoKey") == null ? "" : $event.get("bankCardNoKey").toString();\r\n            String productCode = $event.get("productCode") == null ? "" : $event.get("productCode").toString();\r\n            String payIpProvince = $event.get("payIpProvince") == null ? "" : $event.get("payIpProvince").toString();\r\n            String payIpCity = $event.get("payIpCity") == null ? "" : $event.get("payIpCity").toString();\r\n            Double amount = $event.get("payableAmount") == null ? 0.0 : Double.parseDouble($event.get("payableAmount").toString());\r\n            String orderReferURL = $event.get("orderReferURL") == null ? "" : $event.get("orderReferURL").toString();\r\n            String payIP = $event.get("payIP")==null?"":$event.get("payIP").toString();\r\n            String payerPt = $event.get("payerPt") == null ? "" : $event.get("payerPt").toString();\r\n\t\t \tString sfsName = "B112";\r\n\t\t \tString sfsName2 = "P112002";\r\n\t\t \t\r\n\t\t \tMap<String, String> params = Maps.newHashMap();\r\n\t\t \tparams.put("payableAmount", new Double(amount).toString());\r\n\t\t \tparams.put("amount", amount+"");\r\n\t\t \tparams.put("payIP", payIP);\r\n\t\t \tparams.put("payerPt", payerPt);\r\n\t \t  if (!"".equals(productCode)) {\r\n\t      params.put("productCode", productCode);\r\n\t\t  }\r\n\t\t  if (!"".equals(masOrderNo)) {\r\n\t\t      params.put("masOrderNo", masOrderNo);\r\n\t\t  }\r\n\t    if (!"".equals(payerCertNo)) {\r\n          params.put("payerCertNo", payerCertNo);\r\n      }\r\n      if (!"".equals(payerPhone)) {\r\n          params.put("payerPhone", payerPhone);\r\n      }\r\n      if (!"".equals(payChannel)) {\r\n          params.put("payChannel", payChannel);\r\n         \r\n      }\r\n      if (!"".equals(customerNo)) {\r\n          params.put("customerNo", customerNo);\r\n         \r\n      }\r\n      if (!"".equals(bankCardNoKey)) {\r\n          params.put("bankCardNoKey", bankCardNoKey);\r\n         \r\n      }\r\n      if (!"".equals(payerMemberId)) {\r\n          params.put("payerMemberId", payerMemberId);\r\n      }\r\n      if (!"".equals(payIpProvince)) {\r\n          params.put("payIpProvince", payIpProvince);\r\n      }\r\n      if (!"".equals(payIpCity)) {\r\n          params.put("payIpCity", payIpCity);\r\n      }\r\n      if (!"".equals(orderReferURL)) {\r\n          params.put("orderReferURL", orderReferURL);\r\n      }\r\n      \r\n\t\t  boolean b  = resource.securityFlowService.push(sfsName, params);\r\n\t\t  params.put("bankCardNoKey_S", bankCardNoKey);\r\n\t\t  params.put("payerPhone_S", payerPhone);\r\n\t\t  SecurityFlowResultVO result = resource.securityFlowService.execute(sfsName2, params);\r\n\t\t}catch(Exception ex){\r\n\t\t\tlogger.error("exec PostExecution-payChannel-all-pay-flow error.", ex);\r\n\t\t}\r\n\r\nend\r\n\r\nrule "PostExecution-Wallet-flow"\r\nwhen\r\n\t$event:Map(this["customerNo"] == "114228")\r\nthen\r\n\t\t try {\r\n            //用于钱包在cp001上的推送\r\n            String customerNo = $event.get("customerNo") == null ? "" : $event.get("customerNo").toString();\r\n            String invokeIp = $event.get("externalInvokeIP") == null ? "" : $event.get("externalInvokeIP").toString();\r\n            String pt = $event.get("payerPt") == null ? "" : $event.get("payerPt").toString().toLowerCase();\r\n            String masOrderNo = $event.get("masOrderNo") == null ? "" : $event.get("masOrderNo").toString();\r\n            Double amount = $event.get("payableAmount") == null ? 0.0 : Double.parseDouble($event.get("payableAmount").toString());\r\n\r\n            String sfsName = "B111";\r\n            Map<String, String> params = Maps.newHashMap();\r\n            if (!"".equals(masOrderNo)) {\r\n                params.put("masOrderNo", masOrderNo);\r\n            }\r\n            if (!"".equals(customerNo)) {\r\n                params.put("customerNo", customerNo);\r\n            }\r\n            if (!"".equals(invokeIp)) {\r\n                params.put("invokeIp", invokeIp);\r\n            }\r\n            if (!"".equals(pt)) {\r\n                params.put("payerPt", pt);\r\n            }\r\n            params.put("payableAmount", new Double(amount).toString());\r\n            boolean b = resource.securityFlowService.push(sfsName, params);\r\n        } catch (Exception ex) {\r\n            logger.error("exec CP001-PostExecution-Wallet error.", ex);\r\n        }\r\n\r\nend\r\nrule "PostExecution-paymentCode-Wallet-flow"\r\nwhen\r\n\t$event:Map(this["paymentCode"] == "2001")\r\nthen\r\n\t\t try {\r\n            String payerMemberId = $event.get("payerMemberId") == null ? "" : $event.get("payerMemberId").toString();\r\n            String payerId = $event.get("payerId") == null ? "" : $event.get("payerId").toString();\r\n            String outMemberId = $event.get("outMemberId") == null ? "" : $event.get("outMemberId").toString();\r\n            String payeeMemberId = $event.get("payeeMemberId") == null ? "" : $event.get("payeeMemberId").toString();\r\n            Double amount = $event.get("payableAmount") == null ? 0.0 : Double.parseDouble($event.get("payableAmount").toString());\r\n            String fexPayerIdNo = $event.get("fexPayerIdNo") == null ? "" : $event.get("fexPayerIdNo").toString().toUpperCase();\r\n            String cardholderIdentNumber = $event.get("cardholderIdentNumber") == null ? "" : $event.get("cardholderIdentNumber").toString().toUpperCase();\r\n            String sfsName = "B122";\r\n    \t \tMap<String, String> params = Maps.newHashMap();\r\n    \t \tif(!"".equals(outMemberId)){\r\n    \t \t    params.put("payerMemberId", outMemberId);\r\n    \t \t}\r\n    \t \tif(!"".equals(payerId)){\r\n    \t \t    params.put("payerMemberId", payerId);\r\n    \t \t}\r\n    \t \tif(!"".equals(payerMemberId)){\r\n    \t \t    params.put("payerMemberId", payerMemberId);\r\n    \t \t}\r\n    \t \tparams.put("payeeMemberId", payeeMemberId);\r\n    \t \tif(!"".equals(cardholderIdentNumber)){\r\n    \t \t    params.put("payerCertNo", cardholderIdentNumber);\r\n    \t \t}\r\n    \t \tif(!"".equals(fexPayerIdNo)){\r\n    \t \t    params.put("payerCertNo", fexPayerIdNo);\r\n    \t \t}\r\n    \t \tparams.put("transferAmount", new Double(amount).toString());\r\n\t\tboolean b  = resource.securityFlowService.push(sfsName, params);\r\n        } catch (Exception ex) {\r\n            logger.error("exec CP001-PostExecution-Wallet error.", ex);\r\n        }\r\n\r\nend',
          opDateTime: Random.datetime(),
          opUserUid: Random.word(8),
          opUserName: "我是小B"
        }
      ],
      status: "Offline"
    }
  };

  return result;
};

const bindRuleList = () => {
  const result = {
    errorCode: "",
    errorCodeDes: "",
    resultCode: "SUCCESS",
    series: ruleType
  };
  return result;
};

const httpResult = () => {
  const result = {
    errorCode: "",
    errorCodeDes: "",
    resultCode: "SUCCESS"
  };

  return result;
};

export default [
  {
    url: "/checkPoint/list",
    method: "post",
    response: () => {
      return itemList();
    }
  },
  {
    url: "/checkPoint/delete",
    method: "post",
    response: () => {
      return httpResult();
    }
  },
  {
    url: "/checkPoint/allRules",
    method: "post",
    response: () => {
      return allRuleList();
    }
  },
  {
    url: "/checkPoint/rule/bind/qry",
    method: "post",
    response: () => {
      return bindRuleList();
    }
  },
  {
    url: "/checkPoint/generic/rule/detail",
    method: "post",
    response: () => {
      return ruleItemResult();
    }
  },
  {
    url: "/checkPoint/generic/rule/createOrUpdate",
    method: "post",
    response: () => {
      return ruleItemResult();
    }
  }
] as MockMethod[];
